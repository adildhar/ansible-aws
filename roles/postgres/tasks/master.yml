---
- name: PostgreSQL Master Configuration | Ensure PostgreSQL is running
  become: yes
  service:
    name: "{{ postgresql_service_name }}"
    state: started

- name: PostgreSQL Master Configuration | Make sure the PostgreSQL users are present
  postgresql_user:
    name: "{{item.name}}"
    password: "{{ item.pass | default(omit) }}"
    encrypted: "{{ item.encrypted | default(omit) }}"
    port: "{{postgresql_port}}"
    state: present
    login_user: "{{postgresql_admin_user}}"
  become: yes
  become_user: "{{postgresql_admin_user}}"
  with_items: "{{postgresql_users}}"
  when: postgresql_users|length > 0

- name: PostgreSQL Master Configuration | Make sure the PostgreSQL databases are present
  postgresql_db:
    name: "{{item.name}}"
    owner: "{{ item.owner | default(postgresql_database_owner) }}"
    encoding: "{{ item.encoding | default(postgresql_encoding) }}"
    lc_collate: "{{ item.lc_collate | default(postgresql_locale) }}"
    lc_ctype: "{{ item.lc_ctype | default(postgresql_ctype) }}"
    port: "{{postgresql_port}}"
    template: "template0"
    state: present
    login_user: "{{postgresql_admin_user}}"
  become: yes
  become_user: "{{postgresql_admin_user}}"
  with_items: "{{postgresql_databases}}"
  when: postgresql_databases|length > 0


- name: PostgreSQL Master Configuration | Update the user privileges
  postgresql_user:
    name: "{{item.name}}"
    db: "{{item.db | default(omit)}}"
    port: "{{postgresql_port}}"
    priv: "{{item.priv | default(omit)}}"
    state: present
    login_host: "{{item.host | default(omit)}}"
    login_user: "{{postgresql_admin_user}}"
    role_attr_flags: "{{item.role_attr_flags | default(omit)}}"
  become: yes
  become_user: "{{postgresql_admin_user}}"
  with_items: "{{postgresql_user_privileges}}"
  when: postgresql_users|length > 0

- name: PostgreSQl Master Configuration | Check repmgr exists
  become: yes
  stat: path= "{{ postgresql_conf_directory }}/conf.d/replregistered"
  register: statresult