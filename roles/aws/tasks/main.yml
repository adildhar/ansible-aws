---
- name: WebServer | Create the WebServer Instance(s)
  local_action:
    module: ec2
    region: "{{ web_region }}"
    group_id: "{{ web_group_id}}"
    keypair: "{{ web_key_name }}"
    instance_type: "{{ web_ins_type }}"
    image: "{{ web_ami_id }}"
    vpc_subnet_id: "{{ item }}"
    assign_public_ip: False
    wait: True
    wait_timeout: 900
    instance_tags:
      Name: "{{ web_application }}_WEB_Instance"
      Environment: "{{ ENV }}"
      Role: "{{ web_server_role }}"
      Application: "{{ web_application }}"
  register: web
  with_items:
    - "{{ web_subnet_ida }}"
    - "{{ web_subnet_idb }}" 

- name: WebServer | Set the Instances facts
  set_fact:
    instance_private_ip_1: "{{ web.results[0].instances[0].private_ip }}"
    instance_id_1: "{{ web.results[0].instances[0].id }}"
    instance_private_ip_2: "{{ web.results[1].instances[0].private_ip }}"
    instance_id_2: "{{ web.results[1].instances[0].id }}"

- name: waiting for server to come up
  local_action: wait_for host={{ item }} state=started delay=30 timeout=200
  with_items: 
    - "{{ instance_private_ip_1 }}"
    - "{{ instance_private_ip_2 }}"

- name: WebServer | Add the newly created EC2 instance(s) to the local host group (located inside the directory)
  local_action: 
    module: lineinfile 
    dest: "{{ inventory_hosts }}" 
    regexp: "{{ item }}" 
    insertafter: "[webserver]" 
    line: "{{ item }}"
  with_items:
    - "{{ instance_private_ip_1 }}"
    - "{{ instance_private_ip_2 }}" 


- name: Create host Group to login dynamically to EC2 Instance(s)
  add_host: 
    hostname: "{{ item }}"
    groupname: "{{ web_server_role }}"
  with_items: 
    - "{{ instance_private_ip_1 }}"
    - "{{ instance_private_ip_2 }}"

- name: ELB | Adding EC2 instance(s) to the ELB
   local_action:
     module: ec2_elb
     region: "{{ web_region }}"
     ec2_elbs: "{{ load_balancer_name }}"
     instance_id: "{{ item }}"
     state: present
   with_items: 
     - "{{ instance_id_1 }}"
     - "{{ instance_id_2 }}"